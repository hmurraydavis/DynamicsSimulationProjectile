function A3_Q3_double_pendulum
    mplungue=2.78;
    mrot=.7844; %kg
    chord=5; %inches
    d_eltocom=.46; %inches
    e_elst_com=.5; %in
    l_airfoil= 8.25; %in
    slope_liftcurve=2*pi;
    air_density=1.2; %kg/m^3
    spring_stiffness=2573; %N/m
    torsional_spring_stiffness=2.1; %N*m/rad
    coef_visc_dpng=2.3; %N*s/m
    coef_tta_viscous_damping=1.3; %N*s/rad; %N*s/rad
    Ig=0.00128688; % kg m^2;
    velair=0; %m/s %can be changed at will
    %q=.5*dens*v^2*A (A=l*cord)
    q=.5*air_density*velair^2*l_airfoil*chord;
    
    m=mplungue; d=d_eltocom; 
    ZZ=[6,30,.3,5]; %h,theta,hdot,theta dot
    
    t_span = [0:0.01:5]; 
    [t, zout] = ode45(@sphpend_fun, t_span, ZZ); 
    
    hold all;
    figure;
    plot(t,zout(:,1),'g','LineWidth',2);
    legend('h')
    xlabel('time (s)', 'FontSize', 16)
    ylabel('vertical displacement (m)', 'FontSize', 16)
    title('Vertical Displacement with Time, Vair=0', 'FontSize', 20)
    
    figure;
    plot(t,zout(:,2),'g','LineWidth',2)
    legend('theta');
    xlabel('time (s)', 'FontSize', 16)
    ylabel('angle (rad)', 'FontSize', 16)
    title('Angle with Time, Vair=0', 'FontSize', 20)
    
    function states = sphpend_fun(T, ZZ) %%h,theta,hdot,theta dot   
        theta=ZZ(2); h=ZZ(1);
        thtadot=ZZ(4); hdot=ZZ(3);
        M1= [mplungue, mrot*d; mrot*d, Ig + (mrot*d^2)];
        M2=-1*[spring_stiffness,0;0,torsional_spring_stiffness]+[0,q*2*pi;0,-e_elst_com*q*2*pi]; % hk is derived from the plot of AngleOfAttack vs coeffient of lift. 2*pi is that slope. Only matters when air is on, though.
        S=[h;theta];
%         inv(M1)*M2*S
        Drag=[coef_visc_dpng*hdot;coef_tta_viscous_damping*thtadot];
        B=( (inv(M1))*(M2)*S )-Drag ;     
        
        states=[ZZ(3);ZZ(4);B(1);B(2)];
    end 
end
