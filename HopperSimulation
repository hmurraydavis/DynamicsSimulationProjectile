function halie_hopperT1V1()
    clear all; %prep environment

    %Initial conditions:
    g=9.8; %m/s
    ml=20; %mass, g
    mu=10; %g, mass
    vi=0; %m/s
    l=50; %mm, displacement
    d=5; %mm, displacement
    k=9810; %N/m, spring constant
        
    %State variables: upos, uvel, lpos, lvel, initial
    z1_o=0; z2_o=0; z3_o=0; z4_o=0;
    Z_o=[z1_o, z2_o, z3_o, z4_o];
    
    %Integrate for phase 1:
    t_span = [0:0.1:50];
    options = odeset('Events', @event_stop_p1);
    
    [t, zout] = ode45(@equations_p1, t_span, Z_o, options);
    time_lighftoff=t(length(t)); %prints the time at which it hits
    disp('The hopper lifts off the ground at t=' + time_lighftoff);
    
    %second integration--pt. 2
    options = odeset('Events', @event_stop_p1);
    [t2, zout2] = ode45(@equations_p1, t_span, Z_o, options);
    
    %make pretty graphs:
    hold on
    plot(t,zout);
    plot(t2, zout2);
    legend('upper pos','upper velocity','lower pos','lower vel');
    
    
    %%
    function states=equations_p1(T,Z) %function of first order eqs, integrated by ode45
        yu=Z(1); %m, position of upper block
        yl=Z(3); %m, position of lower block
        
        %Integrated functions:
        z1=Z(2); %vel upper
        z2=(ml*g)+(k*(l*(yu-yl))); %acc upper
        z3=Z(4); %vel lower
        fn=(ml*g)-(mu*Z(4));
        z4=(-1)*ml*g-(k*(l-yu))+fn; %acc lower
        
        states=[z1;z2;z3;z4];
    end
    %%
    function states=equations_p2(T,N)
       yu=M(1); %m, position of the upper block
       yl=M(3); %m, position of the lower block
       
       %Integrated functions:
       n1=M(2); %Velocity--upper, m/s
       n2=(ml*g)+(k*(l-(yu-yl))); %acceleration upper, m*s^(-2)
       n3=N(4); %velocity--lower, m/s
       n4=((-1)*ml*g)-(k*(l-(yu-yl))); %acceleration--lower, m*s^(-2)
        
       states=[n1;n2;n3;n4];
    end
    %%
    function [eventvalue,stopthecalc,eventdir] = event_stop_p1(T,X)
     
        % stop when yl = 0 (lower mass hits the ground)
        eventvalue = X(3);  %  ‘Events’ are detected when eventvalue=0
        stopthecalc = 1;    %  stop if event occurs
        eventdir = 0;      %  Detect only events with dydt=0
    end
    %%
end 
